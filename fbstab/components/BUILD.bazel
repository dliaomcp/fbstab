# -*- python -*-

load(
    "//tools:fbstab.bzl",
    "fbstab_cc_googletest",
    "fbstab_cc_library",
)

package(default_visibility = ["//fbstab:__pkg__"])

fbstab_cc_library(
    name = "dense_data",
    srcs = ["dense_data.cc"],
    hdrs = [
        "abstract_components.h",
        "dense_data.h",
    ],
    deps = [
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "dense_variable",
    srcs = ["dense_variable.cc"],
    hdrs = [
        "abstract_components.h",
        "dense_variable.h",
    ],
    deps = [
        ":dense_data",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "dense_residual",
    srcs = ["dense_residual.cc"],
    hdrs = [
        "abstract_components.h",
        "dense_residual.h",
    ],
    deps = [
        ":dense_data",
        ":dense_variable",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "dense_feasibility",
    srcs = [
        "dense_feasibility.cc",
    ],
    hdrs = [
        "abstract_components.h",
        "dense_feasibility.h",
    ],
    deps = [
        ":dense_data",
        ":dense_variable",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "dense_linear_solver",
    srcs = [
        "dense_linear_solver.cc",
    ],
    hdrs = [
        "abstract_components.h",
        "dense_linear_solver.h",
    ],
    deps = [
        ":dense_data",
        ":dense_residual",
        ":dense_variable",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_googletest(
    name = "dense_unit_tests",
    srcs = [
        "test/dense_unit_tests.cc",
        "test/dense_unit_tests.h",
    ],
    deps = [
        ":dense_data",
        ":dense_feasibility",
        ":dense_linear_solver",
        ":dense_residual",
        ":dense_variable",
        "//tools:essential",
    ],
)

fbstab_cc_library(
    name = "mpc_data",
    srcs = ["mpc_data.cc"],
    hdrs = [
        "abstract_components.h",
        "mpc_data.h",
    ],
    deps = [
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "mpc_variable",
    srcs = ["mpc_variable.cc"],
    hdrs = [
        "abstract_components.h",
        "mpc_variable.h",
    ],
    deps = [
        ":mpc_data",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "mpc_residual",
    srcs = ["mpc_residual.cc"],
    hdrs = [
        "abstract_components.h",
        "mpc_residual.h",
    ],
    deps = [
        ":mpc_data",
        ":mpc_variable",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "mpc_feasibility",
    srcs = ["mpc_feasibility.cc"],
    hdrs = [
        "abstract_components.h",
        "mpc_feasibility.h",
    ],
    deps = [
        ":mpc_data",
        ":mpc_variable",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_library(
    name = "riccati_linear_solver",
    srcs = ["riccati_linear_solver.cc"],
    hdrs = [
        "abstract_components.h",
        "riccati_linear_solver.h",
    ],
    deps = [
        ":mpc_data",
        ":mpc_residual",
        ":mpc_variable",
        "//tools:essential",
        "@eigen",
    ],
)

fbstab_cc_googletest(
    name = "mpc_unit_tests",
    srcs = [
        "test/mpc_component_unit_tests.cc",
        "test/mpc_component_unit_tests.h",
    ],
    deps = [
        ":mpc_data",
        ":mpc_feasibility",
        ":mpc_residual",
        ":mpc_variable",
        ":riccati_linear_solver",
        "//tools:essential",
        "@eigen",
    ],
)
